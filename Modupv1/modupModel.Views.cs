//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets32F815A36BE382C6A646D402E639B11CC673BC30CB36AD475984B0F472D5C0F4))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets32F815A36BE382C6A646D402E639B11CC673BC30CB36AD475984B0F472D5C0F4 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets32F815A36BE382C6A646D402E639B11CC673BC30CB36AD475984B0F472D5C0F4()
        {
            this.EdmEntityContainerName = "dbModupEntities";
            this.StoreEntityContainerName = "dbModupModelStoreContainer";
            this.HashOverMappingClosure = "ce675464482c10b0f44a135c996d38c10dea60c668720c6703c7d98ff4edc0be";
            this.HashOverAllExtentViews = "cfd9c69d08d3eb95d10a94ea4b20e1240b64c21e8aaca60e10b9f29ba1757c2d";
            this.ViewCount = 62;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbAnswers", @"
    SELECT VALUE -- Constructing tbAnswers
        [dbModupModel.Store.tbAnswers](T1.tbAnswers_ansID, T1.tbAnswers_qID, T1.tbAnswers_answer, T1.tbAnswers_isCorrect)
    FROM (
        SELECT 
            T.ansID AS tbAnswers_ansID, 
            T.qID AS tbAnswers_qID, 
            T.answer AS tbAnswers_answer, 
            T.isCorrect AS tbAnswers_isCorrect, 
            True AS _from0
        FROM dbModupEntities.tbAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbAwardedModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbAwardedModules", @"
    SELECT VALUE -- Constructing tbAwardedModules
        [dbModupModel.Store.tbAwardedModules](T1.tbAwardedModules_devID, T1.tbAwardedModules_modID, T1.tbAwardedModules_propID, T1.tbAwardedModules_status)
    FROM (
        SELECT 
            T.devID AS tbAwardedModules_devID, 
            T.modID AS tbAwardedModules_modID, 
            T.propID AS tbAwardedModules_propID, 
            T.status AS tbAwardedModules_status, 
            True AS _from0
        FROM dbModupEntities.tbAwardedModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbAwardedProj
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbAwardedProj", @"
    SELECT VALUE -- Constructing tbAwardedProj
        [dbModupModel.Store.tbAwardedProj](T1.tbAwardedProj_projID, T1.tbAwardedProj_raID, T1.tbAwardedProj_prjpropID)
    FROM (
        SELECT 
            T.projID AS tbAwardedProj_projID, 
            T.raID AS tbAwardedProj_raID, 
            T.prjpropID AS tbAwardedProj_prjpropID, 
            True AS _from0
        FROM dbModupEntities.tbAwardedProjs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbClient
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbClient", @"
    SELECT VALUE -- Constructing tbClient
        [dbModupModel.Store.tbClient](T1.tbClient_userID, T1.tbClient_clientID, T1.tbClient_awardedProjects, T1.tbClient_totalEarning, T1.tbClient_tagLine, T1.tbClient_overview, T1.tbClient_isProfileComplete, T1.tbClient_actionCont, T1.tbClient_completedTasks)
    FROM (
        SELECT 
            T.userID AS tbClient_userID, 
            T.clientID AS tbClient_clientID, 
            T.awardedProjects AS tbClient_awardedProjects, 
            T.totalEarning AS tbClient_totalEarning, 
            T.tagLine AS tbClient_tagLine, 
            T.overview AS tbClient_overview, 
            T.isProfileComplete AS tbClient_isProfileComplete, 
            T.actionCont AS tbClient_actionCont, 
            T.completedTasks AS tbClient_completedTasks, 
            True AS _from0
        FROM dbModupEntities.tbClients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbDeveloper
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbDeveloper", @"
    SELECT VALUE -- Constructing tbDeveloper
        [dbModupModel.Store.tbDeveloper](T1.tbDeveloper_clientID, T1.tbDeveloper_devID, T1.tbDeveloper_affiliation)
    FROM (
        SELECT 
            T.clientID AS tbDeveloper_clientID, 
            T.devID AS tbDeveloper_devID, 
            T.affiliation AS tbDeveloper_affiliation, 
            True AS _from0
        FROM dbModupEntities.tbDevelopers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbEducation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbEducation", @"
    SELECT VALUE -- Constructing tbEducation
        [dbModupModel.Store.tbEducation](T1.tbEducation_eduID, T1.tbEducation_clientID, T1.tbEducation_degree, T1.tbEducation_institute, T1.tbEducation_year)
    FROM (
        SELECT 
            T.eduID AS tbEducation_eduID, 
            T.clientID AS tbEducation_clientID, 
            T.degree AS tbEducation_degree, 
            T.institute AS tbEducation_institute, 
            T.year AS tbEducation_year, 
            True AS _from0
        FROM dbModupEntities.tbEducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbEvaluation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbEvaluation", @"
    SELECT VALUE -- Constructing tbEvaluation
        [dbModupModel.Store.tbEvaluation](T1.tbEvaluation_evalID, T1.tbEvaluation_devID, T1.tbEvaluation_skill, T1.tbEvaluation_date, T1.tbEvaluation_result, T1.tbEvaluation_score)
    FROM (
        SELECT 
            T.evalID AS tbEvaluation_evalID, 
            T.devID AS tbEvaluation_devID, 
            T.skill AS tbEvaluation_skill, 
            T.date AS tbEvaluation_date, 
            T.result AS tbEvaluation_result, 
            T.score AS tbEvaluation_score, 
            True AS _from0
        FROM dbModupEntities.tbEvaluations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbExperiences
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbExperiences", @"
    SELECT VALUE -- Constructing tbExperiences
        [dbModupModel.Store.tbExperiences](T1.tbExperiences_expID, T1.tbExperiences_clientID, T1.tbExperiences_workedAs, T1.tbExperiences_company, T1.tbExperiences_duration, T1.tbExperiences_startingYear)
    FROM (
        SELECT 
            T.expID AS tbExperiences_expID, 
            T.clientID AS tbExperiences_clientID, 
            T.workedAs AS tbExperiences_workedAs, 
            T.company AS tbExperiences_company, 
            T.duration AS tbExperiences_duration, 
            T.startingYear AS tbExperiences_startingYear, 
            True AS _from0
        FROM dbModupEntities.tbExperiences AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbModules", @"
    SELECT VALUE -- Constructing tbModules
        [dbModupModel.Store.tbModules](T1.tbModules_modID, T1.tbModules_projID, T1.tbModules_title, T1.tbModules_description, T1.tbModules_budget, T1.tbModules_closeDate, T1.tbModules_devSkillLevel, T1.tbModules_status, T1.tbModules_category, T1.tbModules_devType, T1.tbModules_skillReq, T1.tbModules_filename)
    FROM (
        SELECT 
            T.modID AS tbModules_modID, 
            T.projID AS tbModules_projID, 
            T.title AS tbModules_title, 
            T.description AS tbModules_description, 
            T.budget AS tbModules_budget, 
            T.closeDate AS tbModules_closeDate, 
            T.devSkillLevel AS tbModules_devSkillLevel, 
            T.status AS tbModules_status, 
            T.category AS tbModules_category, 
            T.devType AS tbModules_devType, 
            T.skillReq AS tbModules_skillReq, 
            T.filename AS tbModules_filename, 
            True AS _from0
        FROM dbModupEntities.tbModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbPM
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbPM", @"
    SELECT VALUE -- Constructing tbPM
        [dbModupModel.Store.tbPM](T1.tbPM_pmID, T1.tbPM_userID, T1.tbPM_totalSpending, T1.tbPM_awardedProj)
    FROM (
        SELECT 
            T.pmID AS tbPM_pmID, 
            T.userID AS tbPM_userID, 
            T.totalSpending AS tbPM_totalSpending, 
            T.awardedProj AS tbPM_awardedProj, 
            True AS _from0
        FROM dbModupEntities.tbPMs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbPortfolio
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbPortfolio", @"
    SELECT VALUE -- Constructing tbPortfolio
        [dbModupModel.Store.tbPortfolio](T1.tbPortfolio_portfolioID, T1.tbPortfolio_devID, T1.tbPortfolio_title, T1.tbPortfolio_description, T1.tbPortfolio_imageURL, T1.tbPortfolio_url)
    FROM (
        SELECT 
            T.portfolioID AS tbPortfolio_portfolioID, 
            T.devID AS tbPortfolio_devID, 
            T.title AS tbPortfolio_title, 
            T.description AS tbPortfolio_description, 
            T.imageURL AS tbPortfolio_imageURL, 
            T.url AS tbPortfolio_url, 
            True AS _from0
        FROM dbModupEntities.tbPortfolios AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbProject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbProject", @"
    SELECT VALUE -- Constructing tbProject
        [dbModupModel.Store.tbProject](T1.tbProject_projID, T1.tbProject_pmID, T1.tbProject_moduleNo, T1.tbProject_title, T1.tbProject_description, T1.tbProject_postDate, T1.tbProject_closeDate, T1.tbProject_status, T1.tbProject_estimatedAmt, T1.tbProject_fileName, T1.tbProject_technology)
    FROM (
        SELECT 
            T.projID AS tbProject_projID, 
            T.pmID AS tbProject_pmID, 
            T.moduleNo AS tbProject_moduleNo, 
            T.title AS tbProject_title, 
            T.description AS tbProject_description, 
            T.postDate AS tbProject_postDate, 
            T.closeDate AS tbProject_closeDate, 
            T.status AS tbProject_status, 
            CAST(T.estimatedAmt AS [Edm.Int32]) AS tbProject_estimatedAmt, 
            T.fileName AS tbProject_fileName, 
            T.technology AS tbProject_technology, 
            True AS _from0
        FROM dbModupEntities.tbProjects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbProjProposals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbProjProposals", @"
    SELECT VALUE -- Constructing tbProjProposals
        [dbModupModel.Store.tbProjProposals](T1.tbProjProposals_prjpropID, T1.tbProjProposals_raID, T1.tbProjProposals_projID, T1.tbProjProposals_bidAmt, T1.tbProjProposals_coverLetter, T1.tbProjProposals_estCompletion)
    FROM (
        SELECT 
            T.prjpropID AS tbProjProposals_prjpropID, 
            T.raID AS tbProjProposals_raID, 
            T.projID AS tbProjProposals_projID, 
            T.bidAmt AS tbProjProposals_bidAmt, 
            T.coverLetter AS tbProjProposals_coverLetter, 
            T.estCompletion AS tbProjProposals_estCompletion, 
            True AS _from0
        FROM dbModupEntities.tbProjProposals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbProposals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbProposals", @"
    SELECT VALUE -- Constructing tbProposals
        [dbModupModel.Store.tbProposals](T1.tbProposals_propID, T1.tbProposals_devID, T1.tbProposals_modID, T1.tbProposals_covLetter, T1.tbProposals_hourlyRate, T1.tbProposals_estCompletion)
    FROM (
        SELECT 
            T.propID AS tbProposals_propID, 
            T.devID AS tbProposals_devID, 
            T.modID AS tbProposals_modID, 
            T.covLetter AS tbProposals_covLetter, 
            T.hourlyRate AS tbProposals_hourlyRate, 
            T.estCompletion AS tbProposals_estCompletion, 
            True AS _from0
        FROM dbModupEntities.tbProposals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbQualityAssurance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbQualityAssurance", @"
    SELECT VALUE -- Constructing tbQualityAssurance
        [dbModupModel.Store.tbQualityAssurance](T1.tbQualityAssurance_clientID, T1.tbQualityAssurance_qaID)
    FROM (
        SELECT 
            T.clientID AS tbQualityAssurance_clientID, 
            T.qaID AS tbQualityAssurance_qaID, 
            True AS _from0
        FROM dbModupEntities.tbQualityAssurances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbQuestions", @"
    SELECT VALUE -- Constructing tbQuestions
        [dbModupModel.Store.tbQuestions](T1.tbQuestions_qID, T1.tbQuestions_question, T1.tbQuestions_skill)
    FROM (
        SELECT 
            T.qID AS tbQuestions_qID, 
            T.question AS tbQuestions_question, 
            T.skill AS tbQuestions_skill, 
            True AS _from0
        FROM dbModupEntities.tbQuestions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbRequirementEngineer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbRequirementEngineer", @"
    SELECT VALUE -- Constructing tbRequirementEngineer
        [dbModupModel.Store.tbRequirementEngineer](T1.tbRequirementEngineer_clientID, T1.tbRequirementEngineer_raID)
    FROM (
        SELECT 
            T.clientID AS tbRequirementEngineer_clientID, 
            T.raID AS tbRequirementEngineer_raID, 
            True AS _from0
        FROM dbModupEntities.tbRequirementEngineers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbSkills
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbSkills", @"
    SELECT VALUE -- Constructing tbSkills
        [dbModupModel.Store.tbSkills](T1.tbSkills_skillID, T1.tbSkills_devID, T1.tbSkills_name, T1.tbSkills_skillLevel, T1.tbSkills_type, T1.tbSkills_hourlyRate)
    FROM (
        SELECT 
            T.skillID AS tbSkills_skillID, 
            T.devID AS tbSkills_devID, 
            T.name AS tbSkills_name, 
            T.skillLevel AS tbSkills_skillLevel, 
            T.type AS tbSkills_type, 
            T.hourlyRate AS tbSkills_hourlyRate, 
            True AS _from0
        FROM dbModupEntities.tbSkills AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbUser
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbUser", @"
    SELECT VALUE -- Constructing tbUser
        [dbModupModel.Store.tbUser](T1.tbUser_userID, T1.tbUser_firstName, T1.tbUser_lastName, T1.tbUser_address, T1.tbUser_country, T1.tbUser_state, T1.tbUser_city, T1.tbUser_postalCode, T1.tbUser_contactNumber, T1.tbUser_accountType)
    FROM (
        SELECT 
            T.userID AS tbUser_userID, 
            T.firstName AS tbUser_firstName, 
            T.lastName AS tbUser_lastName, 
            T.address AS tbUser_address, 
            T.country AS tbUser_country, 
            T.state AS tbUser_state, 
            T.city AS tbUser_city, 
            T.postalCode AS tbUser_postalCode, 
            T.contactNumber AS tbUser_contactNumber, 
            T.accountType AS tbUser_accountType, 
            True AS _from0
        FROM dbModupEntities.tbUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbUserCredentials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbUserCredentials", @"
    SELECT VALUE -- Constructing tbUserCredentials
        [dbModupModel.Store.tbUserCredentials](T1.tbUserCredentials_userID, T1.tbUserCredentials_username, T1.tbUserCredentials_password, T1.tbUserCredentials_email, T1.tbUserCredentials_secretQ, T1.tbUserCredentials_secretA)
    FROM (
        SELECT 
            T.userID AS tbUserCredentials_userID, 
            T.username AS tbUserCredentials_username, 
            T.password AS tbUserCredentials_password, 
            T.email AS tbUserCredentials_email, 
            T.secretQ AS tbUserCredentials_secretQ, 
            T.secretA AS tbUserCredentials_secretA, 
            True AS _from0
        FROM dbModupEntities.tbUserCredentials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbMessages", @"
    SELECT VALUE -- Constructing tbMessages
        [dbModupModel.Store.tbMessages](T1.tbMessages_mID, T1.tbMessages_wrID, T1.tbMessages_mfrom, T1.tbMessages_mto, T1.tbMessages_text, T1.tbMessages_dateTime, T1.tbMessages_attachment)
    FROM (
        SELECT 
            T.mID AS tbMessages_mID, 
            T.wrID AS tbMessages_wrID, 
            T.mfrom AS tbMessages_mfrom, 
            T.mto AS tbMessages_mto, 
            T.text AS tbMessages_text, 
            T.dateTime AS tbMessages_dateTime, 
            T.attachment AS tbMessages_attachment, 
            True AS _from0
        FROM dbModupEntities.tbMessages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbProjWorkroom
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbProjWorkroom", @"
    SELECT VALUE -- Constructing tbProjWorkroom
        [dbModupModel.Store.tbProjWorkroom](T1.tbProjWorkroom_wrID, T1.tbProjWorkroom_projID)
    FROM (
        SELECT 
            T.wrID AS tbProjWorkroom_wrID, 
            T.projID AS tbProjWorkroom_projID, 
            True AS _from0
        FROM dbModupEntities.tbProjWorkrooms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbSubModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbSubModules", @"
    SELECT VALUE -- Constructing tbSubModules
        [dbModupModel.Store.tbSubModules](T1.tbSubModules_submodID, T1.tbSubModules_modID, T1.tbSubModules_title, T1.tbSubModules_description, T1.tbSubModules_budget, T1.tbSubModules_closeDate, T1.tbSubModules_devSkillLevel, T1.tbSubModules_status, T1.tbSubModules_category, T1.tbSubModules_devType, T1.tbSubModules_skillReq, T1.tbSubModules_filename)
    FROM (
        SELECT 
            T.submodID AS tbSubModules_submodID, 
            T.modID AS tbSubModules_modID, 
            T.title AS tbSubModules_title, 
            T.description AS tbSubModules_description, 
            T.budget AS tbSubModules_budget, 
            T.closeDate AS tbSubModules_closeDate, 
            T.devSkillLevel AS tbSubModules_devSkillLevel, 
            T.status AS tbSubModules_status, 
            T.category AS tbSubModules_category, 
            T.devType AS tbSubModules_devType, 
            T.skillReq AS tbSubModules_skillReq, 
            T.filename AS tbSubModules_filename, 
            True AS _from0
        FROM dbModupEntities.tbSubModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbModMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbModMessages", @"
    SELECT VALUE -- Constructing tbModMessages
        [dbModupModel.Store.tbModMessages](T1.tbModMessages_mID, T1.tbModMessages_wrID, T1.tbModMessages_mfrom, T1.tbModMessages_mto, T1.tbModMessages_text, T1.tbModMessages_dateTime, T1.tbModMessages_attachment)
    FROM (
        SELECT 
            T.mID AS tbModMessages_mID, 
            T.wrID AS tbModMessages_wrID, 
            T.mfrom AS tbModMessages_mfrom, 
            T.mto AS tbModMessages_mto, 
            T.text AS tbModMessages_text, 
            T.dateTime AS tbModMessages_dateTime, 
            T.attachment AS tbModMessages_attachment, 
            True AS _from0
        FROM dbModupEntities.tbModMessages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbModuleWorkroom
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbModuleWorkroom", @"
    SELECT VALUE -- Constructing tbModuleWorkroom
        [dbModupModel.Store.tbModuleWorkroom](T1.tbModuleWorkroom_wrID, T1.tbModuleWorkroom_modID)
    FROM (
        SELECT 
            T.wrID AS tbModuleWorkroom_wrID, 
            T.modID AS tbModuleWorkroom_modID, 
            True AS _from0
        FROM dbModupEntities.tbModuleWorkrooms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbModCheckpoints
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbModCheckpoints", @"
    SELECT VALUE -- Constructing tbModCheckpoints
        [dbModupModel.Store.tbModCheckpoints](T1.tbModCheckpoints_chkID, T1.tbModCheckpoints_wrID, T1.tbModCheckpoints_title, T1.tbModCheckpoints_dueDate, T1.tbModCheckpoints_status, T1.tbModCheckpoints_end, T1.tbModCheckpoints_description)
    FROM (
        SELECT 
            T.chkID AS tbModCheckpoints_chkID, 
            T.wrID AS tbModCheckpoints_wrID, 
            T.title AS tbModCheckpoints_title, 
            T.dueDate AS tbModCheckpoints_dueDate, 
            T.status AS tbModCheckpoints_status, 
            T.[end] AS tbModCheckpoints_end, 
            T.description AS tbModCheckpoints_description, 
            True AS _from0
        FROM dbModupEntities.tbModCheckpoints AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbCheckpointReqs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbCheckpointReqs", @"
    SELECT VALUE -- Constructing tbCheckpointReqs
        [dbModupModel.Store.tbCheckpointReqs](T1.tbCheckpointReqs_reqID, T1.tbCheckpointReqs_chkID, T1.tbCheckpointReqs_title, T1.tbCheckpointReqs_date, T1.tbCheckpointReqs_files, T1.tbCheckpointReqs_status)
    FROM (
        SELECT 
            T.reqID AS tbCheckpointReqs_reqID, 
            T.chkID AS tbCheckpointReqs_chkID, 
            T.title AS tbCheckpointReqs_title, 
            T.date AS tbCheckpointReqs_date, 
            T.files AS tbCheckpointReqs_files, 
            T.status AS tbCheckpointReqs_status, 
            True AS _from0
        FROM dbModupEntities.tbCheckpointReqs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbModRequests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbModRequests", @"
    SELECT VALUE -- Constructing tbModRequests
        [dbModupModel.Store.tbModRequests](T1.tbModRequests_reqID, T1.tbModRequests_wrID, T1.tbModRequests_title, T1.tbModRequests_date, T1.tbModRequests_status, T1.tbModRequests_filename)
    FROM (
        SELECT 
            T.reqID AS tbModRequests_reqID, 
            T.wrID AS tbModRequests_wrID, 
            T.title AS tbModRequests_title, 
            T.date AS tbModRequests_date, 
            T.status AS tbModRequests_status, 
            T.filename AS tbModRequests_filename, 
            True AS _from0
        FROM dbModupEntities.tbModRequests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbModWorkroomFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbModWorkroomFiles", @"
    SELECT VALUE -- Constructing tbModWorkroomFiles
        [dbModupModel.Store.tbModWorkroomFiles](T1.tbModWorkroomFiles_fileID, T1.tbModWorkroomFiles_wrID, T1.tbModWorkroomFiles_filename, T1.tbModWorkroomFiles_date, T1.tbModWorkroomFiles_uploadedBy, T1.tbModWorkroomFiles_size)
    FROM (
        SELECT 
            T.fileID AS tbModWorkroomFiles_fileID, 
            T.wrID AS tbModWorkroomFiles_wrID, 
            T.filename AS tbModWorkroomFiles_filename, 
            T.date AS tbModWorkroomFiles_date, 
            T.uploadedBy AS tbModWorkroomFiles_uploadedBy, 
            T.size AS tbModWorkroomFiles_size, 
            True AS _from0
        FROM dbModupEntities.tbModWorkroomFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbProjWorkroomFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbProjWorkroomFiles", @"
    SELECT VALUE -- Constructing tbProjWorkroomFiles
        [dbModupModel.Store.tbProjWorkroomFiles](T1.tbProjWorkroomFiles_fileID, T1.tbProjWorkroomFiles_wrID, T1.tbProjWorkroomFiles_filename, T1.tbProjWorkroomFiles_date, T1.tbProjWorkroomFiles_uploadedBy, T1.tbProjWorkroomFiles_size)
    FROM (
        SELECT 
            T.fileID AS tbProjWorkroomFiles_fileID, 
            T.wrID AS tbProjWorkroomFiles_wrID, 
            T.filename AS tbProjWorkroomFiles_filename, 
            T.date AS tbProjWorkroomFiles_date, 
            T.uploadedBy AS tbProjWorkroomFiles_uploadedBy, 
            T.size AS tbProjWorkroomFiles_size, 
            True AS _from0
        FROM dbModupEntities.tbProjWorkroomFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupModelStoreContainer.tbEvalQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupModelStoreContainer.tbEvalQuestions", @"
    SELECT VALUE -- Constructing tbEvalQuestions
        [dbModupModel.Store.tbEvalQuestions](T1.tbEvalQuestions_evalID, T1.tbEvalQuestions_qID)
    FROM (
        SELECT 
            Key(T.tbEvaluation).evalID AS tbEvalQuestions_evalID, 
            Key(T.tbQuestions).qID AS tbEvalQuestions_qID, 
            True AS _from0
        FROM dbModupEntities.tbEvalQuestions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbAnswers", @"
    SELECT VALUE -- Constructing tbAnswers
        [dbModupModel.tbAnswer](T1.tbAnswer_ansID, T1.tbAnswer_qID, T1.tbAnswer_answer, T1.tbAnswer_isCorrect)
    FROM (
        SELECT 
            T.ansID AS tbAnswer_ansID, 
            T.qID AS tbAnswer_qID, 
            T.answer AS tbAnswer_answer, 
            T.isCorrect AS tbAnswer_isCorrect, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbAwardedModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbAwardedModules", @"
    SELECT VALUE -- Constructing tbAwardedModules
        [dbModupModel.tbAwardedModule](T1.tbAwardedModule_devID, T1.tbAwardedModule_modID, T1.tbAwardedModule_propID, T1.tbAwardedModule_status)
    FROM (
        SELECT 
            T.devID AS tbAwardedModule_devID, 
            T.modID AS tbAwardedModule_modID, 
            T.propID AS tbAwardedModule_propID, 
            T.status AS tbAwardedModule_status, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbAwardedModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbAwardedProjs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbAwardedProjs", @"
    SELECT VALUE -- Constructing tbAwardedProjs
        [dbModupModel.tbAwardedProj](T1.tbAwardedProj_projID, T1.tbAwardedProj_raID, T1.tbAwardedProj_prjpropID)
    FROM (
        SELECT 
            T.projID AS tbAwardedProj_projID, 
            T.raID AS tbAwardedProj_raID, 
            T.prjpropID AS tbAwardedProj_prjpropID, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbAwardedProj AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbClients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbClients", @"
    SELECT VALUE -- Constructing tbClients
        [dbModupModel.tbClient](T1.tbClient_userID, T1.tbClient_clientID, T1.tbClient_awardedProjects, T1.tbClient_totalEarning, T1.tbClient_tagLine, T1.tbClient_overview, T1.tbClient_isProfileComplete, T1.tbClient_actionCont, T1.tbClient_completedTasks)
    FROM (
        SELECT 
            T.userID AS tbClient_userID, 
            T.clientID AS tbClient_clientID, 
            T.awardedProjects AS tbClient_awardedProjects, 
            T.totalEarning AS tbClient_totalEarning, 
            T.tagLine AS tbClient_tagLine, 
            T.overview AS tbClient_overview, 
            T.isProfileComplete AS tbClient_isProfileComplete, 
            T.actionCont AS tbClient_actionCont, 
            T.completedTasks AS tbClient_completedTasks, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbClient AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbDevelopers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbDevelopers", @"
    SELECT VALUE -- Constructing tbDevelopers
        [dbModupModel.tbDeveloper](T1.tbDeveloper_clientID, T1.tbDeveloper_devID, T1.tbDeveloper_affiliation)
    FROM (
        SELECT 
            T.clientID AS tbDeveloper_clientID, 
            T.devID AS tbDeveloper_devID, 
            T.affiliation AS tbDeveloper_affiliation, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbDeveloper AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbEducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbEducations", @"
    SELECT VALUE -- Constructing tbEducations
        [dbModupModel.tbEducation](T1.tbEducation_eduID, T1.tbEducation_clientID, T1.tbEducation_degree, T1.tbEducation_institute, T1.tbEducation_year)
    FROM (
        SELECT 
            T.eduID AS tbEducation_eduID, 
            T.clientID AS tbEducation_clientID, 
            T.degree AS tbEducation_degree, 
            T.institute AS tbEducation_institute, 
            T.year AS tbEducation_year, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbEducation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbEvaluations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbEvaluations", @"
    SELECT VALUE -- Constructing tbEvaluations
        [dbModupModel.tbEvaluation](T1.tbEvaluation_evalID, T1.tbEvaluation_devID, T1.tbEvaluation_skill, T1.tbEvaluation_date, T1.tbEvaluation_result, T1.tbEvaluation_score)
    FROM (
        SELECT 
            T.evalID AS tbEvaluation_evalID, 
            T.devID AS tbEvaluation_devID, 
            T.skill AS tbEvaluation_skill, 
            T.date AS tbEvaluation_date, 
            T.result AS tbEvaluation_result, 
            T.score AS tbEvaluation_score, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbEvaluation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbExperiences
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbExperiences", @"
    SELECT VALUE -- Constructing tbExperiences
        [dbModupModel.tbExperience](T1.tbExperience_expID, T1.tbExperience_clientID, T1.tbExperience_workedAs, T1.tbExperience_company, T1.tbExperience_duration, T1.tbExperience_startingYear)
    FROM (
        SELECT 
            T.expID AS tbExperience_expID, 
            T.clientID AS tbExperience_clientID, 
            T.workedAs AS tbExperience_workedAs, 
            T.company AS tbExperience_company, 
            T.duration AS tbExperience_duration, 
            T.startingYear AS tbExperience_startingYear, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbExperiences AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbModules", @"
    SELECT VALUE -- Constructing tbModules
        [dbModupModel.tbModule](T1.tbModule_modID, T1.tbModule_projID, T1.tbModule_title, T1.tbModule_description, T1.tbModule_budget, T1.tbModule_closeDate, T1.tbModule_devSkillLevel, T1.tbModule_status, T1.tbModule_category, T1.tbModule_devType, T1.tbModule_skillReq, T1.tbModule_filename)
    FROM (
        SELECT 
            T.modID AS tbModule_modID, 
            T.projID AS tbModule_projID, 
            T.title AS tbModule_title, 
            T.description AS tbModule_description, 
            T.budget AS tbModule_budget, 
            T.closeDate AS tbModule_closeDate, 
            T.devSkillLevel AS tbModule_devSkillLevel, 
            T.status AS tbModule_status, 
            T.category AS tbModule_category, 
            T.devType AS tbModule_devType, 
            T.skillReq AS tbModule_skillReq, 
            T.filename AS tbModule_filename, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbPMs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbPMs", @"
    SELECT VALUE -- Constructing tbPMs
        [dbModupModel.tbPM](T1.tbPM_pmID, T1.tbPM_userID, T1.tbPM_totalSpending, T1.tbPM_awardedProj)
    FROM (
        SELECT 
            T.pmID AS tbPM_pmID, 
            T.userID AS tbPM_userID, 
            T.totalSpending AS tbPM_totalSpending, 
            T.awardedProj AS tbPM_awardedProj, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbPM AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbPortfolios
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbPortfolios", @"
    SELECT VALUE -- Constructing tbPortfolios
        [dbModupModel.tbPortfolio](T1.tbPortfolio_portfolioID, T1.tbPortfolio_devID, T1.tbPortfolio_title, T1.tbPortfolio_description, T1.tbPortfolio_imageURL, T1.tbPortfolio_url)
    FROM (
        SELECT 
            T.portfolioID AS tbPortfolio_portfolioID, 
            T.devID AS tbPortfolio_devID, 
            T.title AS tbPortfolio_title, 
            T.description AS tbPortfolio_description, 
            T.imageURL AS tbPortfolio_imageURL, 
            T.url AS tbPortfolio_url, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbPortfolio AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbProjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbProjects", @"
    SELECT VALUE -- Constructing tbProjects
        [dbModupModel.tbProject](T1.tbProject_projID, T1.tbProject_pmID, T1.tbProject_moduleNo, T1.tbProject_title, T1.tbProject_description, T1.tbProject_postDate, T1.tbProject_closeDate, T1.tbProject_status, T1.tbProject_estimatedAmt, T1.tbProject_fileName, T1.tbProject_technology)
    FROM (
        SELECT 
            T.projID AS tbProject_projID, 
            T.pmID AS tbProject_pmID, 
            T.moduleNo AS tbProject_moduleNo, 
            T.title AS tbProject_title, 
            T.description AS tbProject_description, 
            T.postDate AS tbProject_postDate, 
            T.closeDate AS tbProject_closeDate, 
            T.status AS tbProject_status, 
            CAST(T.estimatedAmt AS [Edm.Int16]) AS tbProject_estimatedAmt, 
            T.fileName AS tbProject_fileName, 
            T.technology AS tbProject_technology, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbProject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbProjProposals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbProjProposals", @"
    SELECT VALUE -- Constructing tbProjProposals
        [dbModupModel.tbProjProposal](T1.tbProjProposal_prjpropID, T1.tbProjProposal_raID, T1.tbProjProposal_projID, T1.tbProjProposal_bidAmt, T1.tbProjProposal_coverLetter, T1.tbProjProposal_estCompletion)
    FROM (
        SELECT 
            T.prjpropID AS tbProjProposal_prjpropID, 
            T.raID AS tbProjProposal_raID, 
            T.projID AS tbProjProposal_projID, 
            T.bidAmt AS tbProjProposal_bidAmt, 
            T.coverLetter AS tbProjProposal_coverLetter, 
            T.estCompletion AS tbProjProposal_estCompletion, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbProjProposals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbProposals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbProposals", @"
    SELECT VALUE -- Constructing tbProposals
        [dbModupModel.tbProposal](T1.tbProposal_propID, T1.tbProposal_devID, T1.tbProposal_modID, T1.tbProposal_covLetter, T1.tbProposal_hourlyRate, T1.tbProposal_estCompletion)
    FROM (
        SELECT 
            T.propID AS tbProposal_propID, 
            T.devID AS tbProposal_devID, 
            T.modID AS tbProposal_modID, 
            T.covLetter AS tbProposal_covLetter, 
            T.hourlyRate AS tbProposal_hourlyRate, 
            T.estCompletion AS tbProposal_estCompletion, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbProposals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbQualityAssurances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbQualityAssurances", @"
    SELECT VALUE -- Constructing tbQualityAssurances
        [dbModupModel.tbQualityAssurance](T1.tbQualityAssurance_clientID, T1.tbQualityAssurance_qaID)
    FROM (
        SELECT 
            T.clientID AS tbQualityAssurance_clientID, 
            T.qaID AS tbQualityAssurance_qaID, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbQualityAssurance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbQuestions", @"
    SELECT VALUE -- Constructing tbQuestions
        [dbModupModel.tbQuestion](T1.tbQuestion_qID, T1.tbQuestion_question, T1.tbQuestion_skill)
    FROM (
        SELECT 
            T.qID AS tbQuestion_qID, 
            T.question AS tbQuestion_question, 
            T.skill AS tbQuestion_skill, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbQuestions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbRequirementEngineers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbRequirementEngineers", @"
    SELECT VALUE -- Constructing tbRequirementEngineers
        [dbModupModel.tbRequirementEngineer](T1.tbRequirementEngineer_clientID, T1.tbRequirementEngineer_raID)
    FROM (
        SELECT 
            T.clientID AS tbRequirementEngineer_clientID, 
            T.raID AS tbRequirementEngineer_raID, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbRequirementEngineer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbSkills
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbSkills", @"
    SELECT VALUE -- Constructing tbSkills
        [dbModupModel.tbSkill](T1.tbSkill_skillID, T1.tbSkill_devID, T1.tbSkill_name, T1.tbSkill_skillLevel, T1.tbSkill_type, T1.tbSkill_hourlyRate)
    FROM (
        SELECT 
            T.skillID AS tbSkill_skillID, 
            T.devID AS tbSkill_devID, 
            T.name AS tbSkill_name, 
            T.skillLevel AS tbSkill_skillLevel, 
            T.type AS tbSkill_type, 
            T.hourlyRate AS tbSkill_hourlyRate, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbSkills AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbUsers", @"
    SELECT VALUE -- Constructing tbUsers
        [dbModupModel.tbUser](T1.tbUser_userID, T1.tbUser_firstName, T1.tbUser_lastName, T1.tbUser_address, T1.tbUser_country, T1.tbUser_state, T1.tbUser_city, T1.tbUser_postalCode, T1.tbUser_contactNumber, T1.tbUser_accountType)
    FROM (
        SELECT 
            T.userID AS tbUser_userID, 
            T.firstName AS tbUser_firstName, 
            T.lastName AS tbUser_lastName, 
            T.address AS tbUser_address, 
            T.country AS tbUser_country, 
            T.state AS tbUser_state, 
            T.city AS tbUser_city, 
            T.postalCode AS tbUser_postalCode, 
            T.contactNumber AS tbUser_contactNumber, 
            T.accountType AS tbUser_accountType, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbUser AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbUserCredentials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbUserCredentials", @"
    SELECT VALUE -- Constructing tbUserCredentials
        [dbModupModel.tbUserCredential](T1.tbUserCredential_userID, T1.tbUserCredential_username, T1.tbUserCredential_password, T1.tbUserCredential_email, T1.tbUserCredential_secretQ, T1.tbUserCredential_secretA)
    FROM (
        SELECT 
            T.userID AS tbUserCredential_userID, 
            T.username AS tbUserCredential_username, 
            T.password AS tbUserCredential_password, 
            T.email AS tbUserCredential_email, 
            T.secretQ AS tbUserCredential_secretQ, 
            T.secretA AS tbUserCredential_secretA, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbUserCredentials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbMessages", @"
    SELECT VALUE -- Constructing tbMessages
        [dbModupModel.tbMessage](T1.tbMessage_mID, T1.tbMessage_wrID, T1.tbMessage_mfrom, T1.tbMessage_mto, T1.tbMessage_text, T1.tbMessage_dateTime, T1.tbMessage_attachment)
    FROM (
        SELECT 
            T.mID AS tbMessage_mID, 
            T.wrID AS tbMessage_wrID, 
            T.mfrom AS tbMessage_mfrom, 
            T.mto AS tbMessage_mto, 
            T.text AS tbMessage_text, 
            T.dateTime AS tbMessage_dateTime, 
            T.attachment AS tbMessage_attachment, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbMessages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbProjWorkrooms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbProjWorkrooms", @"
    SELECT VALUE -- Constructing tbProjWorkrooms
        [dbModupModel.tbProjWorkroom](T1.tbProjWorkroom_wrID, T1.tbProjWorkroom_projID)
    FROM (
        SELECT 
            T.wrID AS tbProjWorkroom_wrID, 
            T.projID AS tbProjWorkroom_projID, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbProjWorkroom AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbSubModules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbSubModules", @"
    SELECT VALUE -- Constructing tbSubModules
        [dbModupModel.tbSubModule](T1.tbSubModule_submodID, T1.tbSubModule_modID, T1.tbSubModule_title, T1.tbSubModule_description, T1.tbSubModule_budget, T1.tbSubModule_closeDate, T1.tbSubModule_devSkillLevel, T1.tbSubModule_status, T1.tbSubModule_category, T1.tbSubModule_devType, T1.tbSubModule_skillReq, T1.tbSubModule_filename)
    FROM (
        SELECT 
            T.submodID AS tbSubModule_submodID, 
            T.modID AS tbSubModule_modID, 
            T.title AS tbSubModule_title, 
            T.description AS tbSubModule_description, 
            T.budget AS tbSubModule_budget, 
            T.closeDate AS tbSubModule_closeDate, 
            T.devSkillLevel AS tbSubModule_devSkillLevel, 
            T.status AS tbSubModule_status, 
            T.category AS tbSubModule_category, 
            T.devType AS tbSubModule_devType, 
            T.skillReq AS tbSubModule_skillReq, 
            T.filename AS tbSubModule_filename, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbSubModules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbModMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbModMessages", @"
    SELECT VALUE -- Constructing tbModMessages
        [dbModupModel.tbModMessage](T1.tbModMessage_mID, T1.tbModMessage_wrID, T1.tbModMessage_mfrom, T1.tbModMessage_mto, T1.tbModMessage_text, T1.tbModMessage_dateTime, T1.tbModMessage_attachment)
    FROM (
        SELECT 
            T.mID AS tbModMessage_mID, 
            T.wrID AS tbModMessage_wrID, 
            T.mfrom AS tbModMessage_mfrom, 
            T.mto AS tbModMessage_mto, 
            T.text AS tbModMessage_text, 
            T.dateTime AS tbModMessage_dateTime, 
            T.attachment AS tbModMessage_attachment, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbModMessages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbModuleWorkrooms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbModuleWorkrooms", @"
    SELECT VALUE -- Constructing tbModuleWorkrooms
        [dbModupModel.tbModuleWorkroom](T1.tbModuleWorkroom_wrID, T1.tbModuleWorkroom_modID)
    FROM (
        SELECT 
            T.wrID AS tbModuleWorkroom_wrID, 
            T.modID AS tbModuleWorkroom_modID, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbModuleWorkroom AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbModCheckpoints
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbModCheckpoints", @"
    SELECT VALUE -- Constructing tbModCheckpoints
        [dbModupModel.tbModCheckpoint](T1.tbModCheckpoint_chkID, T1.tbModCheckpoint_wrID, T1.tbModCheckpoint_title, T1.tbModCheckpoint_dueDate, T1.tbModCheckpoint_status, T1.tbModCheckpoint_end, T1.tbModCheckpoint_description)
    FROM (
        SELECT 
            T.chkID AS tbModCheckpoint_chkID, 
            T.wrID AS tbModCheckpoint_wrID, 
            T.title AS tbModCheckpoint_title, 
            T.dueDate AS tbModCheckpoint_dueDate, 
            T.status AS tbModCheckpoint_status, 
            T.[end] AS tbModCheckpoint_end, 
            T.description AS tbModCheckpoint_description, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbModCheckpoints AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbCheckpointReqs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbCheckpointReqs", @"
    SELECT VALUE -- Constructing tbCheckpointReqs
        [dbModupModel.tbCheckpointReq](T1.tbCheckpointReq_reqID, T1.tbCheckpointReq_chkID, T1.tbCheckpointReq_title, T1.tbCheckpointReq_date, T1.tbCheckpointReq_files, T1.tbCheckpointReq_status)
    FROM (
        SELECT 
            T.reqID AS tbCheckpointReq_reqID, 
            T.chkID AS tbCheckpointReq_chkID, 
            T.title AS tbCheckpointReq_title, 
            T.date AS tbCheckpointReq_date, 
            T.files AS tbCheckpointReq_files, 
            T.status AS tbCheckpointReq_status, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbCheckpointReqs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbModRequests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbModRequests", @"
    SELECT VALUE -- Constructing tbModRequests
        [dbModupModel.tbModRequest](T1.tbModRequest_reqID, T1.tbModRequest_wrID, T1.tbModRequest_title, T1.tbModRequest_date, T1.tbModRequest_status, T1.tbModRequest_filename)
    FROM (
        SELECT 
            T.reqID AS tbModRequest_reqID, 
            T.wrID AS tbModRequest_wrID, 
            T.title AS tbModRequest_title, 
            T.date AS tbModRequest_date, 
            T.status AS tbModRequest_status, 
            T.filename AS tbModRequest_filename, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbModRequests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbModWorkroomFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbModWorkroomFiles", @"
    SELECT VALUE -- Constructing tbModWorkroomFiles
        [dbModupModel.tbModWorkroomFile](T1.tbModWorkroomFile_fileID, T1.tbModWorkroomFile_wrID, T1.tbModWorkroomFile_filename, T1.tbModWorkroomFile_date, T1.tbModWorkroomFile_uploadedBy, T1.tbModWorkroomFile_size)
    FROM (
        SELECT 
            T.fileID AS tbModWorkroomFile_fileID, 
            T.wrID AS tbModWorkroomFile_wrID, 
            T.filename AS tbModWorkroomFile_filename, 
            T.date AS tbModWorkroomFile_date, 
            T.uploadedBy AS tbModWorkroomFile_uploadedBy, 
            T.size AS tbModWorkroomFile_size, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbModWorkroomFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbProjWorkroomFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbProjWorkroomFiles", @"
    SELECT VALUE -- Constructing tbProjWorkroomFiles
        [dbModupModel.tbProjWorkroomFile](T1.tbProjWorkroomFile_fileID, T1.tbProjWorkroomFile_wrID, T1.tbProjWorkroomFile_filename, T1.tbProjWorkroomFile_date, T1.tbProjWorkroomFile_uploadedBy, T1.tbProjWorkroomFile_size)
    FROM (
        SELECT 
            T.fileID AS tbProjWorkroomFile_fileID, 
            T.wrID AS tbProjWorkroomFile_wrID, 
            T.filename AS tbProjWorkroomFile_filename, 
            T.date AS tbProjWorkroomFile_date, 
            T.uploadedBy AS tbProjWorkroomFile_uploadedBy, 
            T.size AS tbProjWorkroomFile_size, 
            True AS _from0
        FROM dbModupModelStoreContainer.tbProjWorkroomFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for dbModupEntities.tbEvalQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("dbModupEntities.tbEvalQuestions", @"
    SELECT VALUE -- Constructing tbEvalQuestions
        [dbModupModel.tbEvalQuestions](T3.tbEvalQuestions_tbEvaluation, T3.tbEvalQuestions_tbQuestions)
    FROM (
        SELECT -- Constructing tbEvaluation
            CreateRef(dbModupEntities.tbEvaluations, row(T2.tbEvalQuestions_tbEvaluation_evalID), [dbModupModel.tbEvaluation]) AS tbEvalQuestions_tbEvaluation, 
            T2.tbEvalQuestions_tbQuestions
        FROM (
            SELECT -- Constructing tbQuestions
                T1.tbEvalQuestions_tbEvaluation_evalID, 
                CreateRef(dbModupEntities.tbQuestions, row(T1.tbEvalQuestions_tbQuestions_qID), [dbModupModel.tbQuestion]) AS tbEvalQuestions_tbQuestions
            FROM (
                SELECT 
                    T.evalID AS tbEvalQuestions_tbEvaluation_evalID, 
                    T.qID AS tbEvalQuestions_tbQuestions_qID, 
                    True AS _from0
                FROM dbModupModelStoreContainer.tbEvalQuestions AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
